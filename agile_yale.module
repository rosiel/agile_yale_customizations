<?php

/**
 * Implements hook_menu().
 */
function agile_yale_menu() {
  // Menu paths based of the implementation of emicdora_menu.
  return array(
    'articles' => array(
      'title' => 'Articles',
      'page callback' => 'theme',
      'page arguments' => array('agile_yale_article_list'), // FIXME
      'type' => MENU_NORMAL_ITEM,
      'access callback' => 'user_access',
      'access arguments' => array(ISLANDORA_VIEW_OBJECTS),
    ),
  );
}

/**
 * Implements hook_theme().
 */
function agile_yale_theme() {
  $path = drupal_get_path('module', 'agile_yale');
  return array(
    'agile_yale_article_list' => array(
      'file' => 'theme/theme.inc',
      'template' => 'theme/agile-yale-article-list',
      'variables' => array('display_count' => 5),
    ),
  );
}


/**
 * Implements hook_wysiwyg_editor_settings_alter().
 */
function agile_yale_wysiwyg_editor_settings_alter(&$settings, $context){
  if ($context['profile']->editor == 'ckeditor') {
    $settings['extraAllowedContent'] = array(
      'sup(*){*};h3[id];h2[id];h4[id];img()[]{}',
    );
  }
}

/**
 * Implements hook_taxonomy_term_view().
 */
function agile_yale_taxonomy_term_view($term, $view_mode, $langcode) {
  if ($term->vocabulary_machine_name == 'topic') {
    $view_mode = 'block';
  }
  elseif ($term->vocabulary_machine_name == 'temporal') {
    $view_mode = 'block_1';
  }
  else {
    return;
  }
   $related = views_embed_view('taxonomy_islandora_view', $view_mode, $term->name);
  $term->content['view-related'] = array(
    '#prefix' => '<div class="islandora-solr-view">',
    '#markup' => $related,
    '#suffix' => '</div>',
  );
}

/**
 * Implements hook_views_api().
 */
function agile_yale_views_api() {
  return array(
    'api' => 3.0,
    'path' => drupal_get_path('module', 'agile_yale') . '/includes',
  );
}

/**
 * Implements hook_preprocess_page().
 */
function agile_yale_preprocess_page(&$vars) {
  // Unset the "There is currently no content" message.
  if(isset($vars['page']['content']['system_main']['no_content'])) {
    unset($vars['page']['content']['system_main']['no_content']);
  }
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function agile_yale_form_emicdora_workbench_form_alter(&$form, &$form_state, $form_id) {
  $form = array_slice($form, 0, 5, true) +
    array('add_article' => array(
      '#type' => 'submit',
      '#value' => t('Add New Article'),
      '#access' => user_access(ISLANDORA_INGEST),
      '#attributes' => array(
        'class' => array(
          'emicdora-workbench-button',
        ),
      ),
    )
    ) +
    array_slice($form, 5, count($form) - 1, true);
  $form['#submit'][] = 'agile_yale_form_emicdora_workbench_submit';
}

/**
 * Custom submit handler to deal with Add New Article.
 */
function agile_yale_form_emicdora_workbench_submit($form, $form_state) {
  if ($form_state['triggering_element']['#parents'] == array('add_article')) {
    $form_state['redirect'] = 'islandora/object/yale:wiki_article_collection/manage/overview/ingest';
  }
}
